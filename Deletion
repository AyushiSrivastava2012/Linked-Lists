//deletion of nodes
#include <bits/stdc++.h>
using namespace std;

struct node{
	int data=0;
	struct node* next=NULL;
};
void printlist(struct node* n){
	while(n!=NULL){
		cout<<n->data<<" ";
		n=n->next;
	}
}
struct node* insertion(struct node* start,int data, int n){
	if(start==NULL)
	return NULL;
	struct node* tmp=(struct node*)malloc(sizeof(struct node));
	tmp->data=data;
	if(n==1){
		tmp->next=start;
		start=tmp;
	}
	else{
		int i=1;
		struct node* tmp2=start;
		while(i<n-1){
			i++;
			tmp2=tmp2->next;
		}
		tmp->next=tmp2->next;
		tmp2->next=tmp;
	}
	return start;
}
struct node * deletion(struct node * start,int pos){
	if(start==NULL){
		cout<<"error List is empty";
		return NULL;
	}
	struct node*tmp=start,*tmp2;
	if(pos==1){
		start=start->next;
		free(tmp);
	}
	else{
		int i=1;
		while(i<pos-1){
			tmp=tmp->next;
			i++;
		}
		tmp2=tmp->next;
		tmp->next=tmp->next->next;
		free(tmp2);
	}
	return start;
	
}
int main() {
	struct node* head=(struct node*)malloc(sizeof(struct node));
	struct node* second=(struct node*)malloc(sizeof(struct node));
	struct node* third=(struct node*)malloc(sizeof(struct node));
	head->data=1;
	head->next=second;
	second->data=2;
	second->next=third;
	third->data=3;
	third->next=NULL;
	head=insertion(head,4,1);
	printlist(head);
	cout<<endl;
	head=insertion(head,5,5);
	printlist(head);
	head=deletion(head,1);
	printlist(head);
	head=deletion(head,4);
	printlist(head);
	head=deletion(head,2);
	printlist(head);
	return 0;
}
