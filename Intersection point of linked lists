#include <bits/stdc++.h>
using namespace std;

struct node{
	int data=0;
	struct node* next=NULL;
	bool t=false;
};
void printlist(struct node* n){
	while(n!=NULL){
		cout<<n->data<<" ";
		n=n->next;
	}
}
struct node* insertion(struct node* start,int data, int n){
	if(start==NULL)
	return NULL;
	struct node* tmp=(struct node*)malloc(sizeof(struct node));
	tmp->data=data;
	if(n==1){
		tmp->next=start;
		start=tmp;
	}
	else{
		int i=1;
		struct node* tmp2=start;
		while(i<n-1){
			i++;
			tmp2=tmp2->next;
		}
		tmp->next=tmp2->next;
		tmp2->next=tmp;
	}
	return start;
}
struct node * deletion(struct node * start,int pos){
	if(start==NULL){
		cout<<"error List is empty";
		return NULL;
	}
	struct node*tmp=start,*tmp2;
	if(pos==1){
		start=start->next;
		free(tmp);
	}
	else{
		int i=1;
		while(i<pos-1){
			tmp=tmp->next;
			i++;
		}
		tmp2=tmp->next;
		tmp->next=tmp->next->next;
		free(tmp2);
	}
	return start;
	
}
struct node* intersection(struct node* head1,struct node* head2){
	if(head1==NULL ){
		return NULL;
	}
	if(head2==NULL){
		return NULL;
	}
	struct node* tmp=head1;
	while(tmp!=NULL){
		tmp->t=true;
		tmp=tmp->next;
	}
	tmp=head2;
	while(tmp!=NULL){
		if(tmp->t==true){
			return tmp;
		}
		tmp=tmp->next;
	}
	cout<<"NO INTERSECTION\n";
	return NULL;
}
int main() {
	 struct node* newNode;
  struct node* head1 =
            (struct node*) malloc(sizeof(struct node));
  head1->data  = 10;
 
  struct node* head2 =
            (struct node*) malloc(sizeof(struct node));
  head2->data  = 3;
 
  newNode = (struct node*) malloc (sizeof(struct node));
  newNode->data = 6;
  head2->next = newNode;
 
  newNode = (struct node*) malloc (sizeof(struct node));
  newNode->data = 9;
  head2->next->next = newNode;
 
  newNode = (struct node*) malloc (sizeof(struct node));
  newNode->data = 15;
  head1->next = newNode;
  head2->next->next->next  = newNode;
 
  newNode = (struct node*) malloc (sizeof(struct node));
  newNode->data = 30;
  head1->next->next= newNode;
 
  head1->next->next->next = NULL;
  struct node* tmp=intersection(head1,head2);
  cout<<tmp->data;
	return 0;
}
